{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","serverRequests/serverRequests.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getFilm","title","fetch","then","response","json","FindMovie","addMovie","useState","setTitle","loading","setLoading","hasLoadingError","setHasLoadingError","setMovie","a","film","Response","error","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","disabled","App","state","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"sVAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,wDCfd,SAASC,EAAQC,GACtB,OAAOC,MAAM,8CAAD,OAA+CD,IACxDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCUxB,IAAMC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA8CH,oBAAS,GAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KACA,EAA0BL,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcyB,EAAd,KAJ0D,4CAM1D,4BAAAC,EAAA,6DACEJ,GAAW,GADb,SAEqBX,EAAQC,GAF7B,OAEQe,EAFR,OAIE,IACwB,UAAlBA,EAAKC,SACPJ,GAAmB,GAEnBC,EAASE,GAEX,MAAOE,GACPL,GAAmB,GAPrB,QASEF,GAAW,GAbf,4CAN0D,sBAgC1D,OACE,qCACE,uBAAMrB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,yBAIA,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhC,UAAWiC,IAAW,QAAS,CAAE,YAAaX,IAC9CY,MAAOvB,EACPwB,SAAU,SAACC,GACTjB,EAASiB,EAAMC,OAAOH,OACtBX,GAAmB,QAIxBH,GAAW,wCACXE,GACC,mBAAGtB,UAAU,iBAAb,uDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACVsC,QAlE8C,2CA+DhD,4BASF,qBAAKtC,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,oBACVuC,UAAWxC,EACXuC,QAtDZ,WACMvC,GACFkB,EAASlB,GAGXoB,EAAS,IACTK,EAAS,OA4CD,qCAYN,sBAAKxB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,WC1FvByC,EAAb,4MACEC,MAAe,CACblC,OAAQ,IAFZ,EAKEU,SAAW,SAACS,GACL,EAAKe,MAAMlC,OAAOmC,MAAK,SAAA3C,GAAK,OAAIA,EAAMU,SAAWiB,EAAKjB,WACzD,EAAKkC,UAAS,SAACF,GAAD,MAAY,CACxBlC,OAAO,GAAD,mBACDkC,EAAMlC,QADL,CAEJmB,SAVV,4CAgBE,WACE,IAAQnB,EAAWqC,KAAKH,MAAhBlC,OAER,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,SAAU2B,KAAK3B,oBAzBpC,GAAyB4B,aCLzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3d0008cd.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export function getFilm(title: string) {\n  return fetch(`https://www.omdbapi.com/?apikey=c2c705e9&t=${title}`)\n    .then(response => response.json());\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getFilm } from '../../serverRequests/serverRequests';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (film: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  async function findMovie() {\n    setLoading(true);\n    const film = await getFilm(title);\n\n    try {\n      if (film.Response === 'False') {\n        setHasLoadingError(true);\n      } else {\n        setMovie(film);\n      }\n    } catch (error) {\n      setHasLoadingError(true);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function addMovieHandler() {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setTitle('');\n    setMovie(null);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': hasLoadingError })}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setHasLoadingError(false);\n              }}\n            />\n          </div>\n          {loading && <p>Loading</p>}\n          {hasLoadingError && (\n            <p className=\"help is-danger\">\n              `Can&apos;t find a movie with such a title`\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={addMovieHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (film: Movie) => {\n    if (!this.state.movies.find(movie => movie.imdbID === film.imdbID)) {\n      this.setState((state) => ({\n        movies: [\n          ...state.movies,\n          film,\n        ],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}